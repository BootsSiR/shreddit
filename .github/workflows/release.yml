name: Release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - master

jobs:
  # Release unpublished packages.
  release-plz-release:
    name: Release-plz release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run release-plz
        id: release
        uses: release-plz/action@v0.5
        with:
          command: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    outputs:
      releases: ${{ steps.release.outputs.releases }}
      releases_created: ${{ steps.release.outputs.releases_created }}

  # Create a PR with the new versions and changelog, preparing the next release.
  release-plz-pr:
    name: Release-plz PR
    runs-on: ubuntu-latest
    concurrency:
      group: release-plz-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run release-plz
        uses: release-plz/action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: Upload assets
    if: needs.release-plz-release.outputs.releases_created == 'true' && github.repository_owner == 'andrewbanchich'
    needs:
      - release-plz-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - platform: mac-x86_64
            os: macos-13
            target: x86_64-apple-darwin
          - platform: windows
            os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: .exe

    permissions:
      contents: write
      pull-requests: read

    steps:
      - uses: actions/checkout@v2
      - run: rustup target add ${{ matrix.target }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo build --release --all-features --target ${{ matrix.target }}
      - run: mv ./target/${{ matrix.target }}/release/shreddit${{ matrix.ext }} ./target/${{ matrix.target }}/release/shreddit-${{ matrix.platform }}${{ matrix.ext }}
      - run: gh release upload --clobber $(echo "$RELEASES" | jq -r '.[0].tag') ./target/${{ matrix.target }}/release/shreddit-${{ matrix.platform }}${{ matrix.ext }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASES: ${{ needs.release-plz-release.outputs.releases }}
          RELEASES_CREATED: ${{ needs.release-plz-release.outputs.releases_created }}
